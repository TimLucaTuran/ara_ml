{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"fit/","text":"Fit The fit script .... [source] SingleLayerInterpolator sasa_stacker.fit.SingleLayerInterpolator(crawler, num_of_neigbours=6, power_faktor=2) This class takes parameters of a single layer meta surface and looks into the database for similar layers which have been simulated. It then interpolates these to get an approximation for the behaviour of a layer with the provided parameters. Arguments crawler : crawler obj. num_of_neigbours : int, how many similar layers should be considered for the interpolation power_faktor : int, exponent for inverse-distance-weight interpolation (IDW) classify_output sasa_stacker.fit.classify_output(discrete_out, continuous_out, lb)","title":"-Fit"},{"location":"fit/#fit","text":"The fit script .... [source]","title":"Fit"},{"location":"fit/#singlelayerinterpolator","text":"sasa_stacker.fit.SingleLayerInterpolator(crawler, num_of_neigbours=6, power_faktor=2) This class takes parameters of a single layer meta surface and looks into the database for similar layers which have been simulated. It then interpolates these to get an approximation for the behaviour of a layer with the provided parameters. Arguments crawler : crawler obj. num_of_neigbours : int, how many similar layers should be considered for the interpolation power_faktor : int, exponent for inverse-distance-weight interpolation (IDW)","title":"SingleLayerInterpolator"},{"location":"fit/#classify_output","text":"sasa_stacker.fit.classify_output(discrete_out, continuous_out, lb)","title":"classify_output"},{"location":"test/","text":"This is a test: {{autogenerated}}","title":"Test"},{"location":"test/#this-is-a-test","text":"{{autogenerated}}","title":"This is a test:"}]}